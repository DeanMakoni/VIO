// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pbTransform.proto

#include "pbTransform.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_pbMatrix_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_pbMatrix_pbMatrix_2eproto;
namespace datatype {
namespace transform {
class pbTransformDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<pbTransform> _instance;
} _pbTransform_default_instance_;
}  // namespace transform
}  // namespace datatype
static void InitDefaultsscc_info_pbTransform_pbTransform_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::datatype::transform::_pbTransform_default_instance_;
    new (ptr) ::datatype::transform::pbTransform();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_pbTransform_pbTransform_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_pbTransform_pbTransform_2eproto}, {
      &scc_info_pbMatrix_pbMatrix_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_pbTransform_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_pbTransform_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_pbTransform_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_pbTransform_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datatype::transform::pbTransform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::datatype::transform::pbTransform, source_),
  PROTOBUF_FIELD_OFFSET(::datatype::transform::pbTransform, destination_),
  PROTOBUF_FIELD_OFFSET(::datatype::transform::pbTransform, source_timestamp_),
  PROTOBUF_FIELD_OFFSET(::datatype::transform::pbTransform, dest_timestamp_),
  PROTOBUF_FIELD_OFFSET(::datatype::transform::pbTransform, transform_matrix_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::datatype::transform::pbTransform)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::datatype::transform::_pbTransform_default_instance_),
};

const char descriptor_table_protodef_pbTransform_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021pbTransform.proto\022\022datatype.transform\032"
  "\016pbMatrix.proto\"\234\001\n\013pbTransform\022\016\n\006sourc"
  "e\030\001 \001(\t\022\023\n\013destination\030\002 \001(\t\022\030\n\020source_t"
  "imestamp\030\003 \001(\003\022\026\n\016dest_timestamp\030\004 \001(\003\0226"
  "\n\020transform_matrix\030\005 \001(\0132\034.datatype.tran"
  "sform.pbMatrixb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_pbTransform_2eproto_deps[1] = {
  &::descriptor_table_pbMatrix_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_pbTransform_2eproto_sccs[1] = {
  &scc_info_pbTransform_pbTransform_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_pbTransform_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pbTransform_2eproto = {
  false, false, descriptor_table_protodef_pbTransform_2eproto, "pbTransform.proto", 222,
  &descriptor_table_pbTransform_2eproto_once, descriptor_table_pbTransform_2eproto_sccs, descriptor_table_pbTransform_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_pbTransform_2eproto::offsets,
  file_level_metadata_pbTransform_2eproto, 1, file_level_enum_descriptors_pbTransform_2eproto, file_level_service_descriptors_pbTransform_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_pbTransform_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_pbTransform_2eproto)), true);
namespace datatype {
namespace transform {

// ===================================================================

class pbTransform::_Internal {
 public:
  static const ::datatype::transform::pbMatrix& transform_matrix(const pbTransform* msg);
};

const ::datatype::transform::pbMatrix&
pbTransform::_Internal::transform_matrix(const pbTransform* msg) {
  return *msg->transform_matrix_;
}
void pbTransform::clear_transform_matrix() {
  if (GetArena() == nullptr && transform_matrix_ != nullptr) {
    delete transform_matrix_;
  }
  transform_matrix_ = nullptr;
}
pbTransform::pbTransform(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:datatype.transform.pbTransform)
}
pbTransform::pbTransform(const pbTransform& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source(), 
      GetArena());
  }
  destination_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destination().empty()) {
    destination_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_destination(), 
      GetArena());
  }
  if (from._internal_has_transform_matrix()) {
    transform_matrix_ = new ::datatype::transform::pbMatrix(*from.transform_matrix_);
  } else {
    transform_matrix_ = nullptr;
  }
  ::memcpy(&source_timestamp_, &from.source_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&dest_timestamp_) -
    reinterpret_cast<char*>(&source_timestamp_)) + sizeof(dest_timestamp_));
  // @@protoc_insertion_point(copy_constructor:datatype.transform.pbTransform)
}

void pbTransform::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_pbTransform_pbTransform_2eproto.base);
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destination_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&transform_matrix_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&dest_timestamp_) -
      reinterpret_cast<char*>(&transform_matrix_)) + sizeof(dest_timestamp_));
}

pbTransform::~pbTransform() {
  // @@protoc_insertion_point(destructor:datatype.transform.pbTransform)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void pbTransform::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transform_matrix_;
}

void pbTransform::ArenaDtor(void* object) {
  pbTransform* _this = reinterpret_cast< pbTransform* >(object);
  (void)_this;
}
void pbTransform::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void pbTransform::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const pbTransform& pbTransform::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_pbTransform_pbTransform_2eproto.base);
  return *internal_default_instance();
}


void pbTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:datatype.transform.pbTransform)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_.ClearToEmpty();
  destination_.ClearToEmpty();
  if (GetArena() == nullptr && transform_matrix_ != nullptr) {
    delete transform_matrix_;
  }
  transform_matrix_ = nullptr;
  ::memset(&source_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dest_timestamp_) -
      reinterpret_cast<char*>(&source_timestamp_)) + sizeof(dest_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* pbTransform::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datatype.transform.pbTransform.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string destination = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_destination();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datatype.transform.pbTransform.destination"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 source_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          source_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 dest_timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          dest_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .datatype.transform.pbMatrix transform_matrix = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_transform_matrix(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* pbTransform::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datatype.transform.pbTransform)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string source = 1;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datatype.transform.pbTransform.source");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_source(), target);
  }

  // string destination = 2;
  if (this->destination().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination().data(), static_cast<int>(this->_internal_destination().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datatype.transform.pbTransform.destination");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_destination(), target);
  }

  // int64 source_timestamp = 3;
  if (this->source_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_source_timestamp(), target);
  }

  // int64 dest_timestamp = 4;
  if (this->dest_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_dest_timestamp(), target);
  }

  // .datatype.transform.pbMatrix transform_matrix = 5;
  if (this->has_transform_matrix()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::transform_matrix(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datatype.transform.pbTransform)
  return target;
}

size_t pbTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datatype.transform.pbTransform)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source = 1;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // string destination = 2;
  if (this->destination().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination());
  }

  // .datatype.transform.pbMatrix transform_matrix = 5;
  if (this->has_transform_matrix()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transform_matrix_);
  }

  // int64 source_timestamp = 3;
  if (this->source_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_source_timestamp());
  }

  // int64 dest_timestamp = 4;
  if (this->dest_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_dest_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pbTransform::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:datatype.transform.pbTransform)
  GOOGLE_DCHECK_NE(&from, this);
  const pbTransform* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<pbTransform>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:datatype.transform.pbTransform)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:datatype.transform.pbTransform)
    MergeFrom(*source);
  }
}

void pbTransform::MergeFrom(const pbTransform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datatype.transform.pbTransform)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.destination().size() > 0) {
    _internal_set_destination(from._internal_destination());
  }
  if (from.has_transform_matrix()) {
    _internal_mutable_transform_matrix()->::datatype::transform::pbMatrix::MergeFrom(from._internal_transform_matrix());
  }
  if (from.source_timestamp() != 0) {
    _internal_set_source_timestamp(from._internal_source_timestamp());
  }
  if (from.dest_timestamp() != 0) {
    _internal_set_dest_timestamp(from._internal_dest_timestamp());
  }
}

void pbTransform::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:datatype.transform.pbTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbTransform::CopyFrom(const pbTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datatype.transform.pbTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbTransform::IsInitialized() const {
  return true;
}

void pbTransform::InternalSwap(pbTransform* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destination_.Swap(&other->destination_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(pbTransform, dest_timestamp_)
      + sizeof(pbTransform::dest_timestamp_)
      - PROTOBUF_FIELD_OFFSET(pbTransform, transform_matrix_)>(
          reinterpret_cast<char*>(&transform_matrix_),
          reinterpret_cast<char*>(&other->transform_matrix_));
}

::PROTOBUF_NAMESPACE_ID::Metadata pbTransform::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace transform
}  // namespace datatype
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::datatype::transform::pbTransform* Arena::CreateMaybeMessage< ::datatype::transform::pbTransform >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datatype::transform::pbTransform >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
